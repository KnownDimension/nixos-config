# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
      ./kernel.nix
      ./kernel-extra.nix
    
    ];

  boot.initrd.availableKernelModules = [ "ehci_pci" "ahci" "xhci_pci" "firewire_ohci" "usbhid" "usb_storage" "sd_mod" "sr_mod" ];
  boot.initrd.kernelModules = [ "amdgpu" "vfio-pci" ];
  boot.extraModulePackages = [ ];
  



  fileSystems."/" =
    { device = "/dev/disk/by-uuid/ba3eb6fd-4fb9-4570-920c-4609d16d5823";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-3c51d252-3d4f-421a-b6a7-31e243fcba38".device = "/dev/disk/by-uuid/3c51d252-3d4f-421a-b6a7-31e243fcba38";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/991D-86E6";
      fsType = "vfat";
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/befe99b6-d514-4d1a-9642-b8a60bd94806"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp7s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

  
}
